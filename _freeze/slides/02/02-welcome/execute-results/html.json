{
  "hash": "3b5292d32aa50af9b980376ba36c9191",
  "result": {
    "markdown": "---\ntitle: Grammar of graphics\nsubtitle: Lecture 2\nformat: revealjs\nauto-stretch: false\nknitr:\n  opts_chunk: \n    R.options:\n      width: 200\n---\n\n\n\n\n# ggplot2 ‚ù§Ô∏è üêß\n\n## ggplot2 $\\in$ tidyverse\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](images/ggplot2-part-of-tidyverse.png){width=80%}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n-   **ggplot2** is tidyverse's data visualization package\n-   Structure of the code for plots can be summarized as\n\n``` r\nggplot(data = [dataset], \n       mapping = aes(x = [x-variable], \n                     y = [y-variable])) +\n   geom_xxx() +\n   other options\n```\n:::\n:::\n\n## Data: Palmer Penguins\n\nMeasurements for penguin species, island in Palmer Archipelago, size (flipper length, body mass, bill dimensions), and sex.\n\n::: columns\n::: {.column width=\"30%\"}\n![](images/penguins.png){fig-align=\"center\"}\n:::\n\n::: {.column width=\"70%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(palmerpenguins)\nglimpse(penguins)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel‚Ä¶\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgersen, Torgersen, Torgersen, Torgersen, Torgersen, Torgersen, Torgersen, Torgersen, Torgersen, Torgersen, Torgersen, Torgers‚Ä¶\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, 42.0, 37.8, 37.8, 41.1, 38.6, 34.6, 36.6, 38.7, 42.5, 34.4, 46.0, 37.8, 37.7, 35.9, 38.2, 38.8, 35.3, 40.6, 40.5, 37.9, ‚Ä¶\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, 20.2, 17.1, 17.3, 17.6, 21.2, 21.1, 17.8, 19.0, 20.7, 18.4, 21.5, 18.3, 18.7, 19.2, 18.1, 17.2, 18.9, 18.6, 17.9, 18.6, ‚Ä¶\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186, 180, 182, 191, 198, 185, 195, 197, 184, 194, 174, 180, 189, 185, 180, 187, 183, 187, 172, 180, 178, 178, 188, 184, 195‚Ä¶\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, 4250, 3300, 3700, 3200, 3800, 4400, 3700, 3450, 4500, 3325, 4200, 3400, 3600, 3800, 3950, 3800, 3800, 3550, 3200, 3150, ‚Ä¶\n$ sex               <fct> male, female, female, NA, female, male, female, male, NA, NA, NA, NA, female, male, male, female, female, male, female, male, female, male, female, male, male, female, male‚Ä¶\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007‚Ä¶\n```\n\n\n:::\n:::\n\n:::\n:::\n\n## {.smaller}\n\n::: panel-tabset\n### Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](02-welcome_files/figure-revealjs/unnamed-chunk-4-1.png){width=70%}\n:::\n:::\n\n\n### Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = penguins, \n       mapping = aes(x = bill_depth_mm, y = bill_length_mm,\n                     color = species)) +\n  geom_point() +\n  labs(title = \"Bill depth and length\",\n       subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n       x = \"Bill depth (mm)\", y = \"Bill length (mm)\",\n       color = \"Species\")\n```\n:::\n\n:::\n\n## {.smaller}\n\n> **Start with the `penguins` data frame**\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"1\"}\nggplot(data = penguins)\n```\n\n::: {.cell-output-display}\n![](02-welcome_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n\n\n## {.smaller}\n\n> Start with the `penguins` data frame, **map bill depth to the x-axis**\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(data = penguins,\n       mapping = aes(x = bill_depth_mm))\n```\n\n::: {.cell-output-display}\n![](02-welcome_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\n## {.smaller}\n\n> Start with the `penguins` data frame, map bill depth to the x-axis **and map bill length to the y-axis.**\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(data = penguins,\n       mapping = aes(x = bill_depth_mm,\n                     y = bill_length_mm))\n```\n\n::: {.cell-output-display}\n![](02-welcome_files/figure-revealjs/unnamed-chunk-8-1.png){width=960}\n:::\n:::\n\n\n## {.smaller}\n\n> Start with the `penguins` data frame, map bill depth to the x-axis and map bill length to the y-axis.\n> **Represent each observation with a point**\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(data = penguins,\n       mapping = aes(x = bill_depth_mm,\n                     y = bill_length_mm)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](02-welcome_files/figure-revealjs/unnamed-chunk-9-1.png){width=960}\n:::\n:::\n\n\n## {.smaller}\n\n> Start with the `penguins` data frame, map bill depth to the x-axis and map bill length to the y-axis.\n> Represent each observation with a point **and map species to the color of each point.**\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(data = penguins,\n       mapping = aes(x = bill_depth_mm,\n                     y = bill_length_mm,\n                     color = species)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](02-welcome_files/figure-revealjs/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n\n## {.smaller}\n\n> Start with the `penguins` data frame, map bill depth to the x-axis and map bill length to the y-axis.\n> Represent each observation with a point and map species to the color of each point.\n> **Title the plot \"Bill depth and length\"**\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(data = penguins,\n       mapping = aes(x = bill_depth_mm,\n                     y = bill_length_mm,\n                     color = species)) +\n  geom_point() +\n  labs(title = \"Bill depth and length\")\n```\n\n::: {.cell-output-display}\n![](02-welcome_files/figure-revealjs/unnamed-chunk-11-1.png){width=960}\n:::\n:::\n\n\n## {.smaller}\n\n> Start with the `penguins` data frame, map bill depth to the x-axis and map bill length to the y-axis.\n> Represent each observation with a point and map species to the color of each point.\n> Title the plot \"Bill depth and length\", **add the subtitle \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\"**\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"7\"}\nggplot(data = penguins,\n       mapping = aes(x = bill_depth_mm,\n                     y = bill_length_mm,\n                     color = species)) +\n  geom_point() +\n  labs(title = \"Bill depth and length\",\n       subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\")\n```\n\n::: {.cell-output-display}\n![](02-welcome_files/figure-revealjs/unnamed-chunk-12-1.png){width=960}\n:::\n:::\n\n\n## {.smaller}\n\n> Start with the `penguins` data frame, map bill depth to the x-axis and map bill length to the y-axis.\n> Represent each observation with a point and map species to the color of each point.\n> Title the plot \"Bill depth and length\", add the subtitle \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\", **label the x and y axes as \"Bill depth (mm)\" and \"Bill length (mm)\", respectively**\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"8\"}\nggplot(data = penguins,\n       mapping = aes(x = bill_depth_mm,\n                     y = bill_length_mm,\n                     color = species)) +\n  geom_point() +\n  labs(title = \"Bill depth and length\",\n       subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n       x = \"Bill depth (mm)\", y = \"Bill length (mm)\")\n```\n\n::: {.cell-output-display}\n![](02-welcome_files/figure-revealjs/unnamed-chunk-13-1.png){width=960}\n:::\n:::\n\n\n## {.smaller}\n\n> Start with the `penguins` data frame, map bill depth to the x-axis and map bill length to the y-axis.\n> Represent each observation with a point and map species to the color of each point.\n> Title the plot \"Bill depth and length\", add the subtitle \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\", label the x and y axes as \"Bill depth (mm)\" and \"Bill length (mm)\", respectively, **label the legend \"Species\"**\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(data = penguins,\n       mapping = aes(x = bill_depth_mm,\n                     y = bill_length_mm,\n                     color = species)) +\n  geom_point() +\n  labs(title = \"Bill depth and length\",\n       subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n       x = \"Bill depth (mm)\", y = \"Bill length (mm)\",\n       color = \"Species\") #<<\n```\n\n::: {.cell-output-display}\n![](02-welcome_files/figure-revealjs/unnamed-chunk-14-1.png){width=960}\n:::\n:::\n\n\n## {.smaller}\n\n> Start with the `penguins` data frame, map bill depth to the x-axis and map bill length to the y-axis.\n> Represent each observation with a point and map species to the color of each point.\n> Title the plot \"Bill depth and length\", add the subtitle \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\", label the x and y axes as \"Bill depth (mm)\" and \"Bill length (mm)\", respectively, label the legend \"Species\", **and add a caption for the data source.**\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"10\"}\nggplot(data = penguins,\n       mapping = aes(x = bill_depth_mm,\n                     y = bill_length_mm,\n                     color = species)) +\n  geom_point() +\n  labs(title = \"Bill depth and length\",\n       subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n       x = \"Bill depth (mm)\", y = \"Bill length (mm)\",\n       color = \"Species\",\n       caption = \"Source: Palmer Station LTER / palmerpenguins package\")\n```\n\n::: {.cell-output-display}\n![](02-welcome_files/figure-revealjs/unnamed-chunk-15-1.png){width=960}\n:::\n:::\n\n\n## {.smaller}\n\n> Start with the `penguins` data frame, map bill depth to the x-axis and map bill length to the y-axis.\n> Represent each observation with a point and map species to the color of each point.\n> Title the plot \"Bill depth and length\", add the subtitle \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\", label the x and y axes as \"Bill depth (mm)\" and \"Bill length (mm)\", respectively, label the legend \"Species\", and add a caption for the data source.\n> **Finally, use a discrete color scale that is designed to be perceived by viewers with common forms of color blindness.**\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"11\"}\nggplot(data = penguins,\n       mapping = aes(x = bill_depth_mm,\n                     y = bill_length_mm,\n                     color = species)) +\n  geom_point() +\n  labs(title = \"Bill depth and length\",\n       subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n       x = \"Bill depth (mm)\", y = \"Bill length (mm)\",\n       color = \"Species\",\n       caption = \"Source: Palmer Station LTER / palmerpenguins package\") +\n  scale_color_viridis_d()\n```\n\n::: {.cell-output-display}\n![](02-welcome_files/figure-revealjs/unnamed-chunk-16-1.png){width=960}\n:::\n:::\n\n\n## {.smaller}\n\n::: panel-tabset\n### Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](02-welcome_files/figure-revealjs/unnamed-chunk-17-1.png){width=70%}\n:::\n:::\n\n\n### Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = penguins,\n       mapping = aes(x = bill_depth_mm,\n                     y = bill_length_mm,\n                     color = species)) +\n  geom_point() +\n  labs(title = \"Bill depth and length\",\n       subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n       x = \"Bill depth (mm)\", y = \"Bill length (mm)\",\n       color = \"Species\",\n       caption = \"Source: Palmer Station LTER / palmerpenguins package\") +\n  scale_color_viridis_d()\n```\n:::\n\n\n### Narrative\n\nStart with the `penguins` data frame, map bill depth to the x-axis and map bill length to the y-axis.\n\nRepresent each observation with a point and map species to the color of each point.\n\nTitle the plot \"Bill depth and length\", add the subtitle \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\", label the x and y axes as \"Bill depth (mm)\" and \"Bill length (mm)\", respectively, label the legend \"Species\", and add a caption for the data source.\n\nFinally, use a discrete color scale that is designed to be perceived by viewers with common forms of color blindness.\n:::\n\n## More slides\n\nAdd more slides as needed...\n",
    "supporting": [
      "02-welcome_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}